#include <iostream>

using namespace std;


bool isPrime(int n) {
    if (n <= 1) return false; 
    for (int i = 2; i * i <= n; ++i)
    {
        if (n % i == 0) return false;
    }
    return true;
}


int* removePrimes(int* arr, int& size) 
{
    if (arr == nullptr)
    {
        cout << "Ошибка: Массив не выделен." << endl;
        return nullptr;
    }

    
    int nonPrimesCount = 0;
    for (int i = 0; i < size; ++i) 
    {
        if (!isPrime(arr[i])) 
        {
            nonPrimesCount++;
        }
    }

    /
    if (nonPrimesCount == 0) 
    {
        delete[] arr; 
        size = 0;
        return nullptr;
    }

    
    int* newArr = new int[nonPrimesCount];

    
    int newIndex = 0;
    for (int i = 0; i < size; ++i) 
    {
        if (!isPrime(arr[i])) 
        {
            newArr[newIndex] = arr[i];
            newIndex++;
        }
    }

   
    delete[] arr;

    
    size = nonPrimesCount;

    
    return newArr;
}

int main() 
{
    int size = 10;
    int* myArray = new int[size];

    
    for (int i = 0; i < size; ++i) 
    {
        myArray[i] = rand() % 50;
    }

    cout << "Исходный массив: ";
    for (int i = 0; i < size; ++i)
    {
        cout << myArray[i] << " ";
    }
    cout << endl;

    
    myArray = removePrimes(myArray, size);

    if (myArray == nullptr) 
    {
        cout << "В массиве не осталось элементов." << endl;
    } else 
    {
        cout << "Массив после удаления простых чисел: ";
        for (int i = 0; i < size; ++i) 
        {
            cout << myArray[i] << " ";
        }
        cout << endl;
    }

    
    if (myArray != nullptr) 
    {
        delete[] myArray;
    }

    return 0;
}
